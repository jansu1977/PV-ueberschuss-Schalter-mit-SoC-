blueprint:
  name: "PV Überschuss‑Schalter mit SoC"
  description: >
    Schaltet einen beliebigen Schalter EIN, wenn
      • PV‑Überschuss ≥ Mindest‑Überschuss
      • Batterie‑SoC   ≥ Mindest‑SoC.

    Schaltet AUS, sobald eine der beiden Bedingungen nicht mehr erfüllt ist.

    **Parameter (alle in der UI einstellbar)**
    * PV‑Überschuss‑Sensor in Watt (positiv = Einspeisung)
    * Batterie‑SoC‑Sensor in %
    * Mindest‑SoC (Default 50 %)
    * Mindest‑Überschuss (Default 500 W)
    * Ziel‑Schalter (z. B. Shelly‑Plug)

  domain: automation
  input:
    target_switch:
      name: Ziel‑Schalter
      selector:
        entity:
          filter:
            domain: switch
    surplus_sensor:
      name: PV‑Überschuss‑Sensor (W)
      selector:
        entity:
          domain: sensor
    battery_soc_sensor:
      name: Batterie‑SoC‑Sensor (%)
      selector:
        entity:
          domain: sensor
    min_soc:
      name: Mindest‑SoC (%)
      default: 50
      selector:
        number:
          min: 0
          max: 100
          step: 1
          unit_of_measurement: "%"
    min_surplus:
      name: Mindest‑Überschuss (W)
      default: 500
      selector:
        number:
          min: 0
          max: 10000
          step: 50
          unit_of_measurement: "W"

trigger:
  - platform: state
    entity_id: !input surplus_sensor
  - platform: state
    entity_id: !input battery_soc_sensor

action:
  - choose:
      - conditions:
          - condition: numeric_state
            entity_id: !input battery_soc_sensor
            above: !input min_soc
          - condition: numeric_state
            entity_id: !input surplus_sensor
            above: !input min_surplus
        sequence:
          - service: switch.turn_on
            target:
              entity_id: !input target_switch
    default:
      - service: switch.turn_off
        target:
          entity_id: !input target_switch

mode: restart
