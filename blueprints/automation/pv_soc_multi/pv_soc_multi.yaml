blueprint:
  name: "PV Überschuss-Schalter mit SoC (Mehrfachgeräte)"
  description: >
    Schaltet eine oder mehrere Schalter-Entitäten **ein**, sobald
    * PV‑Überschuss ≥ Mindest‑Überschuss **und**
    * Batterie‑SoC ≥ Mindest‑SoC

    Bleiben **eingeschaltet**, solange der SoC über dem Schwellwert liegt –
    selbst wenn der PV‑Überschuss zwischenzeitlich verschwindet.
    Ausgeschaltet wird erst, wenn der SoC **unter** den Schwellwert fällt.

    **Highlights**
    * Unterstützt beliebig viele Shelly‑Steckdosen oder andere Switches
    * Alle Parameter bequem in der UI konfigurierbar (kein YAML nötig)
    * Voll kompatibel mit Home‑Assistant 2024.10+

  domain: automation
  input:
    target_switches:
      name: Ziel‑Schalter (eine oder mehrere)
      selector:
        entity:
          domain: switch
          multiple: true
    surplus_sensor:
      name: PV‑Überschuss‑Sensor (W)
      selector:
        entity:
          domain: sensor
    battery_soc_sensor:
      name: Batterie‑SoC‑Sensor (%)
      selector:
        entity:
          domain: sensor
    min_soc:
      name: Mindest‑SoC (%)
      default: 50
      selector:
        number:
          min: 0
          max: 100
          step: 1
          unit_of_measurement: "%"
          mode: slider
    min_surplus:
      name: Mindest‑Überschuss (W)
      default: 500
      selector:
        number:
          min: 0
          max: 10000
          step: 50
          unit_of_measurement: "W"
          mode: slider

# ---------- Blueprint‑Logik ----------
trigger:
  - platform: state
    entity_id: !input surplus_sensor
  - platform: state
    entity_id: !input battery_soc_sensor

action:
  - choose:
      # ------- Einschalten -------
      - conditions:
          - condition: numeric_state
            entity_id: !input surplus_sensor
            above: !input min_surplus
          - condition: numeric_state
            entity_id: !input battery_soc_sensor
            above: !input min_soc
        sequence:
          - service: switch.turn_on
            target:
              entity_id: !input target_switches

      # ------- Ausschalten -------
      - conditions:
          - condition: numeric_state
            entity_id: !input battery_soc_sensor
            below: !input min_soc
        sequence:
          - service: switch.turn_off
            target:
              entity_id: !input target_switches

    default: []

mode: restart